{"ast":null,"code":"var _jsxFileName = \"/Users/misterstino/Desktop/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport Navigation from './components/Navigation/Navigation.js';\nimport Logo from './components/Logo/Logo.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport Rank from './components/Rank/Rank.js';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai'; //Configuration\n\nconst app = new Clarifai.App({\n  apiKey: '6b750152f84f4e0a9f539eab6d2130ce'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}; //Main App render section\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.retrieveEstimates = data => {\n      const concepts = data.outputs[0].data.regions[0].data.concepts;\n      console.log(concepts); //Age part\n\n      const ageConcepts = concepts.map(concept => {\n        if (concept.vocab_id === \"age_appearance\") {\n          return concept;\n        }\n      });\n\n      const highestAge = (({\n        name,\n        value\n      }) => ({\n        name,\n        value\n      }))(ageConcepts[0]); //gender part\n      //male\n\n\n      const masculineArray = concepts.filter(e => {\n        return e.name === 'masculine';\n      });\n      const masculine = masculineArray[0]; //female\n\n      const feminineArray = concepts.filter(e => {\n        return e.name === \"feminine\";\n      }); //Multiculti apprearance\n\n      const multiculuralAppearance = concepts.filter(e => {\n        return vocab_id === \"multicultural_appearance\";\n      });\n      const feminine = feminineArray[0];\n      console.log(masculine);\n      console.log(feminine);\n      console.log(highestAge);\n      console.log(multiculuralAppearance); //\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        imageURL: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      console.log('click');\n      app.models.initModel({\n        id: Clarifai.DEMOGRAPHICS_MODEL\n      }).then(Model => {\n        return Model.predict(this.state.imageURL);\n      }).then(response => {\n        this.retrieveEstimates(response);\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      imageURL: '',\n      age: {},\n      masculine: {},\n      feminine: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      imageURL: this.state.imageURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/misterstino/Desktop/facerecognitionbrain/src/App.js"],"names":["React","Component","FaceRecognition","Navigation","Logo","ImageLinkForm","Rank","Particles","Clarifai","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","retrieveEstimates","data","concepts","outputs","regions","console","log","ageConcepts","map","concept","vocab_id","highestAge","name","masculineArray","filter","e","masculine","feminineArray","multiculuralAppearance","feminine","onInputChange","event","setState","imageURL","target","onSubmit","models","initModel","id","DEMOGRAPHICS_MODEL","then","Model","predict","state","response","catch","err","input","age","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js'\nimport Navigation from './components/Navigation/Navigation.js'\nimport Logo from './components/Logo/Logo.js'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js'\nimport Rank from './components/Rank/Rank.js'\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai'\n\n\n//Configuration\n\nconst app = new Clarifai.App({\n  apiKey: '6b750152f84f4e0a9f539eab6d2130ce'\n });\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\n//Main App render section\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageURL: '',\n      age: {},\n      masculine: {},\n      feminine: {},\n    }\n\n  }\n\n\n\n  retrieveEstimates = (data) => {\n    const concepts = data.outputs[0].data.regions[0].data.concepts\n    console.log(concepts);\n    //Age part\n    const ageConcepts = concepts.map((concept) => {\n      if (concept.vocab_id === \"age_appearance\") {\n          return concept\n        }\n      })\n    const highestAge = (({ name, value }) => ({ name, value }))(ageConcepts[0]);\n    //gender part\n    //male\n    const masculineArray =concepts.filter((e) => {\n      return e.name === 'masculine';\n    });\n    const masculine = masculineArray[0];\n    //female\n    const feminineArray =concepts.filter((e) => {\n      return e.name === \"feminine\";\n    });\n    //Multiculti apprearance\n    const multiculuralAppearance =concepts.filter((e) => {\n      return vocab_id === \"multicultural_appearance\";\n    });\n    const feminine = feminineArray[0];\n    console.log(masculine);\n    console.log(feminine);\n    console.log(highestAge);\n    console.log(multiculuralAppearance);\n    //\n  }\n\n  onInputChange = (event) => {\n    this.setState({imageURL: event.target.value})\n  }\n  \n  onSubmit = () => {\n    console.log('click');\n    app.models.initModel({id: Clarifai.DEMOGRAPHICS_MODEL})\n      .then(Model => {\n        return Model.predict(this.state.imageURL);\n      })\n      .then(response => {\n        this.retrieveEstimates(response)\n      }).catch((err) => console.log(err));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions} \n        />\n        <Navigation />\n        <Logo />\n        <Rank/>\n        <ImageLinkForm \n        onInputChange={this.onInputChange} \n        onSubmit={this.onSubmit}\n        /> \n        <FaceRecognition imageURL={this.state.imageURL}/>\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}