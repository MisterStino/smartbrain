{"ast":null,"code":"var _jsxFileName = \"/Users/misterstino/Desktop/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport Navigation from './components/Navigation/Navigation.js';\nimport Logo from './components/Logo/Logo.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport Rank from './components/Rank/Rank.js';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai'; //Configuration\n\nconst app = new Clarifai.App({\n  apiKey: '6b750152f84f4e0a9f539eab6d2130ce'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}; //Main App render section\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.retrieveEstimates = data => {\n      const concepts = data.outputs[0].data.regions[0].data.concepts;\n      console.log(concepts);\n      const highestAge = concepts.map(concept => {\n        let tempHihgest = 0;\n\n        if (concept.vocab_id === \"age_appearance\") {\n          if (concept.value > tempHihgest) {\n            tempHihgest = concept.value;\n            return concept;\n          }\n        }\n      });\n      console.log(highestAge);\n\n      for (const conceptObject in concepts) {\n        console.log(conceptObject);\n      }\n\n      for (const property in concepts) {\n        console.log(`${property}: ${concepts[property]}`);\n      }\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        imageURL: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      console.log('click');\n      app.models.initModel({\n        id: Clarifai.DEMOGRAPHICS_MODEL\n      }).then(Model => {\n        return Model.predict(this.state.imageURL);\n      }).then(response => {\n        this.retrieveEstimates(response);\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      imageURL: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      imageURL: this.state.imageURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/misterstino/Desktop/facerecognitionbrain/src/App.js"],"names":["React","Component","FaceRecognition","Navigation","Logo","ImageLinkForm","Rank","Particles","Clarifai","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","retrieveEstimates","data","concepts","outputs","regions","console","log","highestAge","map","concept","tempHihgest","vocab_id","conceptObject","property","onInputChange","event","setState","imageURL","target","onSubmit","models","initModel","id","DEMOGRAPHICS_MODEL","then","Model","predict","state","response","catch","err","input","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js'\nimport Navigation from './components/Navigation/Navigation.js'\nimport Logo from './components/Logo/Logo.js'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js'\nimport Rank from './components/Rank/Rank.js'\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai'\n\n\n//Configuration\n\nconst app = new Clarifai.App({\n  apiKey: '6b750152f84f4e0a9f539eab6d2130ce'\n });\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\n//Main App render section\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageURL:'',\n    }\n\n  }\n\n\n\n  retrieveEstimates = (data) => {\n    const concepts = data.outputs[0].data.regions[0].data.concepts\n    console.log(concepts);\n    const highestAge = concepts.map((concept) => {\n      let tempHihgest = 0;\n      if (concept.vocab_id === \"age_appearance\") {\n        if(concept.value > tempHihgest) {\n          tempHihgest = concept.value;\n          return concept\n        }\n      }\n      \n    })\n    console.log(highestAge);\n    \n    for (const conceptObject in concepts) {\n      console.log(conceptObject); \n  }\n  for (const property in concepts) {\n    console.log(`${property}: ${concepts[property]}`);\n  }\n  }\n\n  onInputChange = (event) => {\n    this.setState({imageURL: event.target.value})\n  }\n  \n  onSubmit = () => {\n    console.log('click');\n    app.models.initModel({id: Clarifai.DEMOGRAPHICS_MODEL})\n      .then(Model => {\n        return Model.predict(this.state.imageURL);\n      })\n      .then(response => {\n        this.retrieveEstimates(response)\n      }).catch((err) => console.log(err));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions} \n        />\n        <Navigation />\n        <Logo />\n        <Rank/>\n        <ImageLinkForm \n        onInputChange={this.onInputChange} \n        onSubmit={this.onSubmit}\n        /> \n        <FaceRecognition imageURL={this.state.imageURL}/>\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}